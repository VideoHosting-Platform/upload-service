name: Deploy to Yandex Cloud Kubernetes

on:
  push:
    branches: [ dev ]

env:
  FOLDER_ID: b1gq90lppq2qo7ofbuhb
  CLUSTER_ID: mk8s-cluster

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    # Официальный Action для настройки YC CLI
    - name: Configure Yandex Cloud CLI
      uses: yc-actions/configure-yc-cli@v1
      with:
        sa-json-credentials: ${{ secrets.YC_SERVICE_ACCOUNT_KEY }}
        folder-id: ${{ env.FOLDER_ID }}

    # Официальный Action для получения kubeconfig
    - name: Get Kubernetes Credentials
      uses: yc-actions/get-k8s-credentials@v1
      with:
        cluster-id: ${{ env.CLUSTER_ID }}
        external: true  # Для доступа извне Y.Cloud

    # Установка kubectl от Microsoft (официальный)
    - name: Setup kubectl
      uses: azure/setup-kubectl@v3

    # Пример деплоя тестового приложения
    - name: Deploy Application
      run: |
        # Проверяем подключение
        kubectl cluster-info
        
        # Применяем манифест (можно заменить на ваши файлы)
        kubectl apply -f - <<EOF
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: nginx-deployment
          labels:
            app: nginx
        spec:
          replicas: 2
          selector:
            matchLabels:
              app: nginx
          template:
            metadata:
              labels:
                app: nginx
            spec:
              containers:
              - name: nginx
                image: nginx:1.25
                ports:
                - containerPort: 80
        ---
        apiVersion: v1
        kind: Service
        metadata:
          name: nginx-service
        spec:
          type: ClusterIP
          selector:
            app: nginx
          ports:
            - port: 80
              targetPort: 80
        EOF

        # Проверяем результат
        kubectl get pods -w
        kubectl get svc